name: "Terraform Infrastructure Change Management"

on:
    push:
      branches:
      - main
      paths:
      - eks/**
   
    pull_request:
      branches:
      - main
      paths:
      - eks/**

permissions:
  id-token: write
  contents: read

env:
    TF_LOG: INFO
    AWS_REGION: us-east-1
   
jobs:
    terraform:
        name: "Terraform Infrastructure Change Management"
        runs-on: ubuntu-latest
        defaults:
            run:
                shell: bash
                working-directory: ./eks

        steps:
        - name: Git clone the repository
          uses: actions/checkout@v4

        - name: Configure AWS credentials
          uses: aws-actions/configure-aws-credentials@v4
          with:
            role-to-assume: arn:aws:iam::637423456632:role/github-actions-role
            role-session-name: ecrrolesessiontemp
            aws-region: ${{ env.AWS_REGION }}

        - uses: hashicorp/setup-terraform@v3
          with:
            terraform_version: "1.4.0"

        - name: Terraform init
          id: init
          run: terraform init

        - name: Terraform format
          id: fmt
          run: terraform fmt -check    

        - name: Terraform validate
          id: validate
          run: terraform validate

        - name: Terraform plan
          id: plan
          if: github.event_name == 'pull_request'
          run: terraform plan -no-color -input=false
          continue-on-error: true

        - uses: actions/github-script@v6
          if: github.event_name == 'pull_request'
          env:
            PLAN: "terraform\n${{ steps.plan.outputs.stdout }}"
            with:
            script: |
                const output = `#### Terraform Format and Style üñå\`${{ steps.fmt.outcome }}\`
                #### Terraform Initialization ‚öôÔ∏è\`${{ steps.init.outcome }}\`
                #### Terraform Validation ü§ñ\`${{ steps.validate.outcome }}\`
                #### Terraform Plan üìñ\`${{ steps.plan.outcome }}\`

                <details><summary>Show Plan</summary>


                \`\`\`\n
                ${process.env.PLAN}
                \`\`\`

                </details>

                *Pushed by: @${{ github.actor }}, Action: \`${{ github.event_name }}\`*`;


                github.rest.issues.createComment({
                issue_number: context.issue.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body: output
                })

        - name: Terraform Plan Status
          if: steps.plan.outcome == 'failure'
          run: exit 1

        - name: Terraform Apply
          if: github.ref == 'refs/heads/main' && github.event_name == 'push'
          run: terraform apply -auto-approve -input=false